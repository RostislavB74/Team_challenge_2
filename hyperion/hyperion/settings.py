"""
Django settings for hyperion project.

Generated by 'django-admin startproject' using Django 5.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os
import sys
import environ
# from environ import Env
from pathlib import Path
import environ

# Налаштування BASE_DIR
BASE_DIR = Path(__file__).resolve().parent.parent
print(f"BASE_DIR: {BASE_DIR}")  # Для діагностики

# Налаштування .env
env = environ.Env()
environ.Env.read_env(os.path.join(BASE_DIR, '.env'))  # Зміна шляху на hyperion\.env
print(f"Шлях до .env: {os.path.join(BASE_DIR, '.env')}")  #

# Build paths inside the project like this: BASE_DIR / 'subdir'.


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-s2&g4jl=i-np52)o(bo0i$p#vyh_$v8spsr&gqb)oz2ps)g8!9'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'users.apps.UsersConfig',
    'tiles.apps.TilesConfig',
    'passports_designs',
    'materials',
    'units',
    'productions',
    'company_structure',
    'equipments',
    'journals',
    'navigation',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'hyperion.middleware.PermissionMiddleware',
]

ROOT_URLCONF = 'hyperion.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / "templates"],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'hyperion.wsgi.application'
TEMPLATES[0]['OPTIONS']['context_processors'] += [
    'navigation.context_processors.navigation_menu',
]


# Database
DATABASES = {
    'default': {
        'ENGINE': 'mssql',
        'NAME': env('DATABASE_NAME'),
        'USER': env('DATABASE_USER', default=''),
        'PASSWORD': env('DATABASE_PASSWORD', default=''),
        'HOST': env('DATABASE_HOST'),
        'PORT': env('DATABASE_PORT', default='1433'),
        'OPTIONS': {
            'driver': 'ODBC Driver 17 for SQL Server', #'SQL Server Native Client 10.0',
            'trusted_connection': 'yes', #env.bool('DATABASE_TRUSTED_CONNECTION', default=False),
        },
    }
}
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases
# DATABASES = {
#     'default': {
#         'ENGINE': 'mssql',
#         'NAME': env('DATABASE_NAME'),
#         'HOST': env('DATABASE_HOST'),
#         'PORT': env('DATABASE_PORT', default='1433'),
#         'OPTIONS': {
#             'driver': 'SQL Server Native Client 10.0',
#             'trusted_connection': 'yes',
#             'unicode_results': True,
#             'MARS_Connection': 'True',
#             'host_is_server': True,  # Windows Authentication
#         },
#     }
# }
AUTH_USER_MODEL = 'users.User'
LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "handlers": {
        "console": {
            "class": "logging.StreamHandler",
        },
    },
    "loggers": {
        "django.db.backends": {
            "level": "DEBUG",
            "handlers": ["console"],
        },
        "journals.views": {
            "level": "DEBUG",
            "handlers": ["console"],
            "propagate": False,
        },
    },
}
# LOGGING = {
#     'version': 1,
#     'disable_existing_loggers': False,
#     'handlers': {
#         'console': {
#             'class': 'logging.StreamHandler',
#         },
#     },
#     'loggers': {
#         'django.db.backends': {
#             'level': 'DEBUG',
#             'handlers': ['console'],
#         },
#     },
# }
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

# LANGUAGE_CODE = 'en-us'
# LANGUAGE_CODE = "uk"
# USE_I18N = True
# USE_L10N = False  # Вимкнути локалізацію чисел
# USE_THOUSAND_SEPARATOR = False
# DECIMAL_SEPARATOR = "."
# NUMBER_GROUPING = 0
# TIME_ZONE = 'UTC'

# USE_I18N = True

# USE_TZ = True
LANGUAGE_CODE = "uk"
USE_I18N = True
USE_L10N = False  # Вимкнути локалізацію формату чисел і часу
USE_THOUSAND_SEPARATOR = False
DECIMAL_SEPARATOR = "."
NUMBER_GROUPING = 0
TIME_FORMAT = "H:i"  # 24-годинний формат (наприклад, 20:47)
DATETIME_FORMAT = "Y-m-d H:i:s"  # Для дат і часу (наприклад, 2025-07-16 20:47:00)

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
